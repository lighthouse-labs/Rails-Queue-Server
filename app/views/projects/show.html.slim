- provide :body_class, 'project-detail'

- content_for :side_nav do
  = render 'shared/menus/project_side_menu', project: @project

.hero
  = render @project

- if student?
  = render 'my_evals'

hr

ul.nav.nav-tabs role="tablist"
  li role="presentation" class="active"
    a href="#questions" aria-controls="questions" role="tab" data-toggle="tab"
      | Project Description
  - if teacher?
    li role="presentation"
      a href="#students"  aria-controls="students" role="tab" data-toggle="tab"
        | Students

.tab-content

  #questions.tab-pane role="tabpanel" class="active"
    h3 Project Description
    .instructions
      == markdown(@project.description)
      == render 'outcomes', project: @project

  #students.tab-pane role="tabpanel"
    h3 Students
    = form_tag projects_path(@project), class: 'form-inline', method: 'get' do

    .form-row
      .form-group
        = select_tag :evals, options_for_select(['Most Recent', 'All Evals'], params[:evals]), class: "form-control project-feedback-dropdown"

    = submit_tag 'Filter', class: 'btn btn-success project-evals-button'

    table.table.students
      thead
        tr
          th Student Info
          th Status
          th Marker
          th Stats
          th

      tbody
        - cohort.students.active.each do |student|
          - evaluation = @projects.last_evaluation(student, cohort)
          tr
            td.details data-value=student.last_name
              .student-info
                = render 'shared/student_info', student: student

            td
              = render 'projects/student_project_status', project_evaluation: evaluation

            td.details
              - if evaluation && evaluation.teacher
                .teacher-info
                  = link_to teacher_path(evaluation.teacher) do
                    = image_tag evaluation.teacher.avatar_url, class: 'avatar'
                  = link_to evaluation.teacher.full_name, teacher_path(evaluation.teacher)
                  br
                    span.label.label-primary = evaluation.teacher.location.name

            td
              - if evaluation
                = "#{evaluation.time_in_queue / 60}m in queue"
                - if evaluation.completed_at
                  br
                  = "#{evaluation.duration / 60}m long"

            td
              - if evaluation
                = link_to 'View', project_evaluation_path(@project, evaluation), class: 'btn btn-info btn-xs'
                | &nbsp;
                - if evaluation.in_state?(:pending)
                  = link_to "Start Marking", start_marking_project_evaluation_path(@project, evaluation), method: :put, class: 'btn btn-primary btn-xs'
                - elsif evaluation.in_state?(:in_progress) && evaluation.teacher == current_user
                  = link_to "Continue Marking", start_marking_project_evaluation_path(@project, evaluation), method: :put, class: 'btn btn-primary btn-xs'
