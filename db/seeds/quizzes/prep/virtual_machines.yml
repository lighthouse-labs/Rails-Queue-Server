name: 'Virtual Machines'
uuid: 9c986b9f-2fb5-4d4e-a387-0c17524e156e
questions:

  -
    question: What is the command to connect to a running virtual machine using Vagrant?
    uuid: be809b23-dd53-40f5-be79-c632c2337910
    outcome: e2be0620-203c-4fa3-9211-8d18800f2777
    options_attributes:
      -
        answer: "`vagrant connect <machine name>` where `<machine name>` is the actual name of the VM"
        explanation: ""
        correct: false
      -
        answer: "`vagrant up` by itself, from the correct directory"
        explanation: ""
        correct: false
      -
        answer: "`vagrant ssh <machine name>` where `<machine name>` is the actual name of the VM"
        explanation: ""
        correct: false
      -
        answer: "`vagrant ssh` by itself, from the correct directory"
        explanation: ""
        correct: true
      -
        answer: "`vagrant connect` by itself, from the correct directory"
        explanation: ""
        correct: false

  -
    question: Which of the following is **NOT** a benefit of using a Virtual machine for your work?
    uuid: 348ca464-5e55-49e5-8ced-c946c4ceaf3e
    outcome: 1c288a79-f974-4a19-8aa7-4f6fce24b132
    options_attributes:
      -
        answer: "Performance: The guest VM runs slightly faster thanks to virtualization optimizations in Virtualbox and Vagrant"
        explanation: "It's actually a bit slower because it uses extra CPU and RAM to run this completely separate machine"
        correct: true
      -
        answer: "Unified Environment: Developers all work on the same environment instead as the others, and as the one where the app/software will actually run"
        explanation: ""
        correct: false
      -
        answer: "Isolation: By keeping things separate, developers don't have to worry about accidental disasters to their actual (host) operating system"
        explanation: ""
        correct: false
      -
        answer: "Pre-configured: Developers can start working on their application instead of first configuring and installing dependencies for it"
        explanation: "Very true, and arguably the most important benefit is this"
        correct: false
      -
        answer: "All of answers are actually benefits of VMs"
        explanation: "There is actually one which is not!"
        correct: false

  -
    question: "Which directory in your vagrant VM is the synchronized folder (ie. where you should be creating your work)?"
    uuid: c206112c-bb81-4925-8fd4-fcfcdacf591f
    outcome: 18980334-9bf4-4f06-a2e8-192d86ba2b81
    options_attributes:
      -
        answer: "`/vagrant`"
        explanation: "Correcto! This is the one that Vagrant by default syncs with your host machine"
        correct: true
      -
        answer: "`/home/vagrant`"
        explanation: "This is your home directory, so often confused to be the one that syncs"
        correct: false
      -
        answer: "`/work`"
        explanation: "This directory doesn't exist by default, so can't be this"
        correct: false
      -
        answer: "`/`"
        explanation: "This is the root of the entire filesystem, and would be overkill to sync with your Mac/host machine"
        correct: false
      -
        answer: "`/home`"
        explanation: "This directory is where all the users have their home directories"
        correct: false

  -
    question: "What roles do Vagrant and VirtualBox play in helping us do our work in a virtual machine?"
    uuid: 0e1d4ccd-fd5b-46a6-976b-e5da6d98dfe8
    outcome: f5f88402-ea58-4114-a1b9-f27574291963
    options_attributes:
      -
        answer: "VirtualBox manages the file system and Vagrant manages the guest Operating System"
        explanation: ""
        correct: false
      -
        answer: "Vagrant manages the file system and VirtualBox manages the guest Operating System"
        explanation: ""
        correct: false
      -
        answer: "VirtualBox is the virtualization software and Vagrant is a command line program to manage it more easily"
        explanation: "Correct. We _could_ use VirtualBox by itself, but it would not give us the convenience of using automation and the command line to easily manage our single or multiple VirtualBox VMs. Vagrant can also work with other VM vendors like VMWare."
        correct: true
      -
        answer: "Vagrant is the virtualization software and VirtualBox is a command line program to manage it"
        explanation: "Since we use `vagrant` commands from the terminal / command line, this can't be true."
        correct: false
      -
        answer: "Vagrant provides `ssh` and VirtualBox manages the operating system and the rest of the heavy lifting"
        explanation: "`ssh` is actually a separate utility that vagrant leverages and does not provide. Look into it!"
        correct: false

  -
    question: |
      You've previously run `vagrant up` to create the VM, but now when you run `vagrant ssh` from Terminal the following error is reported:

      ```
      VM must be created before running this command. Run `vagrant up` first.
      ```

      What is the most likely cause?
    uuid: b6d08f1a-278b-47b0-a4a4-8dcb76d0b05c
    outcome: f926bbd6-25eb-4f38-9e6c-234f69322fc9
    options_attributes:
      -
        answer: "After your laptop (host machine) is restarted, you need to _re-run_ `vagrant up` to re-create the VM"
        explanation: "If this were true, you'd have too many guest operating systems / virtual machines and run out of resources"
        correct: false
      -
        answer: "VirtualBox will kill old machines automatically after a pre-configured amount of time, and so we need to create it again using `vagrant up`"
        explanation: "If this were true, we'd potentially lose work that we didn't save somewhere else. It would be disasterous"
        correct: false
      -
        answer: "You're not in the correct folder with the `Vagrantfile` where you last ran `vagrant up`"
        explanation: "Correct. The `vagrant ssh` command looks in the current folder to find the VM and this is typically the folder where the `Vagrantfile` resides and where you last ran `vagrant up`."
        correct: true
      -
        answer: "The VirtualBox Application needs to be running for Vagrant to properly detect the VM"
        explanation: "Nope. Vagrant can interface with VirtualBox directly and you don't need to launch/start VirtualBox at all"
        correct: false
      -
        answer: "The VM may be there but it's been powered off (using `vagrant halt`) and `vagrant up` can be used to power it up again"
        explanation: "While it's true that the machine must be powered on using `vagrant up` before we can ssh into it, vagrant would report that as the issue"
        correct: false
