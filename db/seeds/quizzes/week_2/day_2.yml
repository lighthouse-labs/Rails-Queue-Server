name: "Deep Dive into REST"
uuid: 71d7d5cd-da8b-4ff4-9696-419d7b402697
questions:
  -
    question: "Which HTTP methods correspond to _Update_ and _Delete_ operations in RESTful services?"
    uuid: 10da8c62-6272-4bed-aa87-add491f46621
    options_attributes: 
      - 
        answer: "`POST` and `DELETE`"
        explanation: "Incorrect, POST is typically used to create a new resource, not update an existing one"
        correct: false
      - 
        answer: "`GET` and `POST`"
        explanation: "Incorrect, GET and POST are used to read and create resources, respectively"
        correct: false
      - 
        answer: "`PUT` and `DELETE`"
        explanation: "Correct, PUT updates an existing resource, and DELETE deletes"
        correct: true
      - 
        answer: "`PUT` and `HEAD`"
        explanation: "Incorrect, HEAD is used to fetch request headers only"
        correct: false
  -
    question: "What is method used by web forms to submit data from the client to the server?"
    uuid: a37a6f4d-d7bd-4f56-9b74-35a1c0eef0f1
    options_attributes: 
      - 
        answer: "`GET`"
        explanation: "Although forms _can_ be submitted using `GET`, they typically use another method"
        correct: false
      - 
        answer: "`POST`"
        explanation: "Correct, the form data is sent to the server using a `POST` request"
        correct: true
      - 
        answer: "`PATCH`"
        explanation: "Incorrect, the `PATCH` method is used to update a resource`"
        correct: false
      - 
        answer: "`DELETE`"
        explanation: "Incorrect, the `DELETE` method is used to delete a resource`"
        correct: false
  -
    question: "In a `POST` request, where are the parameters typically sent?"
    uuid: 3ef7d39f-82c9-4599-9de0-f0be9e190326
    options_attributes: 
      - 
        answer: "In the request headers only"
        explanation: ""
        correct: false
      - 
        answer: "In the request body only"
        explanation: ""
        correct: false
      - 
        answer: "Mainly in the request headers, and sometimes the body"
        explanation: ""
        correct: false
      - 
        answer: "Mainly in the request body, and sometimes the headers"
        explanation: ""
        correct: true
  -
    question: "Which of the following would **not** be a usage of HTTP cookies?"
    uuid: 7e75b9a8-03b0-4931-b4fd-8bad573bb365
    options_attributes: 
      - 
        answer: "Session management"
        explanation: "Incorrect, an identification cookie would be assigned to the client for session management"
        correct: false
      - 
        answer: "Personalization"
        explanation: "Incorrect, an identification cookie would be assigned to the client for personalization"
        correct: false
      - 
        answer: "Tracking"
        explanation: "Incorrect, an identification cookie would be assigned to the client for tracking"
        correct: false
      - 
        answer: "Redirection"
        explanation: "Correct, a redirection does not require the usage of cookies"
        correct: true
  -
    question: "How would you use cURL to make a `POST` request to `http://example.com/api/endpoint`"
    uuid: 5af874ca-d60a-4c11-ab1d-8dd9f235424b
    options_attributes: 
      - 
        answer: "`curl -X POST http://example.com/api/endpoint`"
        explanation: "Correct, the argument `-X` specifies the request method"
        correct: true
      - 
        answer: "`curl -d \"method=POST\" http://example.com/api/endpoint`"
        explanation: "Incorrect, the argumnet `-d` is used to send data"
        correct: false
      - 
        answer: "`curl -b POST http://example.com/api/endpoint`"
        explanation: "Incorrect, the argument `-b` specifies a cookie"
        correct: false
      - 
        answer: "`curl -LI http://example.com/api/endpoint`"
        explanation: "Incorrect, this would follow redirections and show response headers"
        correct: false
  -
    question: "Given a RESTful API, how would you define a **Resource**?"
    uuid: e780e83b-764b-40f9-9d0d-8ef26c20ee4c
    options_attributes: 
      - 
        answer: "A data object in a database"
        explanation: "Incorrect, a resource is more than just a piece of data"
        correct: false
      - 
        answer: "An abstraction of a data object represented by a URL"
        explanation: "Correct, in REST convention a resource represents a complex data abstraction"
        correct: true
      - 
        answer: "An endpoint that generates data upon request"
        explanation: "Incorrect, the _endpoint_ itself is not the resource"
        correct: false
  -
    question: "How are Arrow Functions `() => {}` different than traditional function expressions?"
    uuid: fcc3d47a-972e-496e-9bbc-b90f06c2a415
    options_attributes: 
      - 
        answer: "Simpler syntax, otherwise same"
        explanation: "Incorrect, although the syntax is simpler, it's not the only thing"
        correct: false
      - 
        answer: "Arrow Functions create their own scope"
        explanation: "Incorrect, they inherit parent scope"
        correct: false
      - 
        answer: "Arrow Functions do not declare their own scope"
        explanation: "Correct, arrow functions inherit parent scope"
        correct: true
